/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}
configurations {
    implementation
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
    
    // // https://mvnrepository.com/artifact/org.apache.tomcat.embed/tomcat-embed-core
    // implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '9.0.56'

    // https://mvnrepository.com/artifact/org.apache.tomcat.embed/tomcat-embed-jasper
    implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-jasper', version: '9.0.56'

    // https://mvnrepository.com/artifact/org.apache.tomcat.embed/tomcat-embed-logging-juli
    implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-logging-juli', version: '9.0.0.M6'
    
    // https://mvnrepository.com/artifact/org.springframework/spring-jdbc
    implementation group: 'org.springframework', name: 'spring-jdbc', version: '5.3.15'
    // https://mvnrepository.com/artifact/org.postgresql/postgresql
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.3.1'
    
    // https://mvnrepository.com/artifact/org.apache.tomcat/tomcat-dbcp
    implementation group: 'org.apache.tomcat', name: 'tomcat-dbcp', version: '9.0.56'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.0.1'

    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-core
    implementation group: 'org.springframework.security', name: 'spring-security-core', version: '5.6.1'
    // https://mvnrepository.com/artifact/org.quartz-scheduler/quartz
    implementation group: 'org.quartz-scheduler', name: 'quartz', version: '2.3.2'
    // https://mvnrepository.com/artifact/com.mchange/mchange-commons-java



    // https://mvnrepository.com/artifact/com.sun.mail/jakarta.mail
    implementation group: 'com.sun.mail', name: 'jakarta.mail', version: '2.0.1'

    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    runtimeOnly('io.jsonwebtoken:jjwt-impl:0.11.2')
    runtimeOnly('io.jsonwebtoken:jjwt-jackson:0.11.2')

    // https://mvnrepository.com/artifact/org.easymock/easymock
    testImplementation group: 'org.easymock', name: 'easymock', version: '4.3'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation 'org.slf4j:slf4j-api:2.0.0-alpha6'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-jdk14
    implementation group: 'org.slf4j', name: 'slf4j-jdk14', version: '2.0.0-alpha6'
}

application {
    // Define the main class for the application.
    mainClass = 'gradle_tish_embedded.App'

}


tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    maxHeapSize = '1G'
    beforeTest { descriptor ->
     logger.lifecycle("Running test: " + descriptor)
    }
    onOutput { descriptor, event ->
     logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
    }
}   

